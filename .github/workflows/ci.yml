name: CI
on: [push, pull_request]
jobs:
  node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - run: pnpm i --frozen-lockfile
      - run: pnpm turbo lint build test

  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10.11.0

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f packages/backend/requirements.txt ]; then
          pip install -r packages/backend/requirements.txt
        fi

    - name: Install Node.js dependencies
      run: pnpm install --frozen-lockfile

    - name: Run backend tests
      run: |
        if [ -d packages/backend ]; then
          cd packages/backend
          python -m pytest
        fi
      env:
        PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}

    - name: Run lint
      run: pnpm turbo lint

    - name: Run tests
      run: pnpm turbo test

    - name: Run build
      run: pnpm turbo build 